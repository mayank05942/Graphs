Prob: https://leetcode.com/problems/word-search/
____________________________________________________________________________________________________________________________________________________________

Explanation:


____________________________________________________________________________________________________________________________________________________________

Code:

class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        
        def dfs(board,i,j,idx,word,visited):
            if idx == len(word):
                return True
            
            if i < 0 or j < 0 or i >= len(board) or j >= len(board[0]) or board[i][j] != word[idx] :
                return False
            
            else:
                temp = board[i][j]
                board[i][j] = "#"

                res = dfs(board,i-1,j,idx+1,word,visited) or dfs(board,i,j+1,idx+1,word,visited) or  dfs(board,i,j-1,idx+1,word,visited) or dfs(board,i+1,j,idx+1,word,visited)

                board[i][j] = temp
            
            return res
           
        
        
        visited = [[True]* len(board[0]) for _ in range(len(board))]
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == word[0]:
                    if dfs(board,i,j,0,word,visited):
                        return True
               
        return False
        
     
        
                    
        
    
                    
        
