Prob: https://leetcode.com/problems/course-schedule/
_______________________________________________________________________________________________________________________

Explanation:
-------------

Just check if the graph is cyclic or not ( using coloring method)

from pre-req create an adj list

__________________________________________________________________________________________________________________________

Code:
------

class Solution:
    def canFinish(self, n: int, prerequisites: List[List[int]]) -> bool:
    
    
    # Step1 - Create adj list
    
        adj = [[] for _ in range(n)]
        
        for x,y in prerequisites:
            adj[y].append(x)
      
      # Cycle detection using coloring method
      
        color = [0]*n
        
        def dfs(sv):
            if color[sv] == -1: # Still processing
                return True
            if color[sv] == 1:  # processed
                return False
            
            color[sv] = -1 # checking current vertex
            for i in adj[sv]:
                if dfs(i):
                    return True
            
            color[sv] = 1 # processed
            
            return False
        
        
        for sv in range(n):
            if dfs(sv):
                return False
        return True
        
