Prob:https://leetcode.com/problems/number-of-islands/

Concept: DFS

Code:

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        def cc(grid,i,j):
            if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] != '1':       # Corner cases
                return

            grid[i][j] = '0'   # Mark visisted '1's as 0

            cc(grid,i-1,j)  # go to 4 directions and make all connected components 0
            cc(grid,i+1,j)
            cc(grid,i,j-1)
            cc(grid,i,j+1)



        count = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == "1":
                    cc(grid,i,j)
                    count += 1    # count each time we got one entire connected component
        return count
